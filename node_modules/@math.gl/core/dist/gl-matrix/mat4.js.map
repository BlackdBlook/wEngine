{"version":3,"sources":["../../src/gl-matrix/mat4.ts"],"names":["glMatrix","create","out","ARRAY_TYPE","Float32Array","clone","a","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","set","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","multiply","b","translate","v","x","y","z","scale","rotate","rad","axis","len","Math","sqrt","c","s","t","b12","b20","b21","b22","EPSILON","sin","cos","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","decompose","out_r","out_t","out_s","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspectiveNO","fovy","aspect","f","tan","Infinity","perspective","perspectiveZO","perspectiveFromFieldOfView","fov","upTan","upDegrees","PI","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","orthoNO","lr","bt","ortho","orthoZO","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","target","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","equals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b13","b14","b15","max","mul","sub"],"mappings":"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","sourcesContent":["// @eslint-disable\n// @ts-nocheck\n\nimport * as glMatrix from './common.js';\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns a new 4x4 matrix\n */\nexport function create() {\n  const out = new glMatrix.ARRAY_TYPE(16);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  const out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23,\n  m30,\n  m31,\n  m32,\n  m33\n) {\n  const out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(\n  out,\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23,\n  m30,\n  m31,\n  m32,\n  m33\n) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n\n  out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n  out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n  out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n  out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n  out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n  out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n  out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n  out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n  out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n  out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n  out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n  out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n  out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n  out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n  out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n  out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  const b0 = a00 * a11 - a01 * a10;\n  const b1 = a00 * a12 - a02 * a10;\n  const b2 = a01 * a12 - a02 * a11;\n  const b3 = a20 * a31 - a21 * a30;\n  const b4 = a20 * a32 - a22 * a30;\n  const b5 = a21 * a32 - a22 * a31;\n  const b6 = a00 * b5 - a01 * b4 + a02 * b3;\n  const b7 = a10 * b5 - a11 * b4 + a12 * b3;\n  const b8 = a20 * b2 - a21 * b1 + a22 * b0;\n  const b9 = a30 * b2 - a31 * b1 + a32 * b0;\n\n  // Calculate the determinant\n  return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0 = b[0];\n  let b1 = b[1];\n  let b2 = b[2];\n  let b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n  let a00;\n  let a01;\n  let a02;\n  let a03;\n  let a10;\n  let a11;\n  let a12;\n  let a13;\n  let a20;\n  let a21;\n  let a22;\n  let a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let c;\n  let s;\n  let t;\n  let a00;\n  let a01;\n  let a02;\n  let a03;\n  let a10;\n  let a11;\n  let a12;\n  let a13;\n  let a20;\n  let a21;\n  let a22;\n  let a23;\n  let b00;\n  let b01;\n  let b02;\n  let b10;\n  let b11;\n  let b12;\n  let b20;\n  let b21;\n  let b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let c;\n  let s;\n  let t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  const x = q[0];\n  const y = q[1];\n  const z = q[2];\n  const w = q[3];\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  const translation = new glMatrix.ARRAY_TYPE(3);\n  const bx = -a[0];\n  const by = -a[1];\n  const bz = -a[2];\n  const bw = a[3];\n  const ax = a[4];\n  const ay = a[5];\n  const az = a[6];\n  const aw = a[7];\n\n  const magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  // Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = ((ax * bw + aw * bx + ay * bz - az * by) * 2) / magnitude;\n    translation[1] = ((ay * bw + aw * by + az * bx - ax * bz) * 2) / magnitude;\n    translation[2] = ((az * bw + aw * bz + ax * by - ay * bx) * 2) / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  const m11 = mat[0];\n  const m12 = mat[1];\n  const m13 = mat[2];\n  const m21 = mat[4];\n  const m22 = mat[5];\n  const m23 = mat[6];\n  const m31 = mat[8];\n  const m32 = mat[9];\n  const m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  const scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n\n  const is1 = 1 / scaling[0];\n  const is2 = 1 / scaling[1];\n  const is3 = 1 / scaling[2];\n\n  const sm11 = mat[0] * is1;\n  const sm12 = mat[1] * is2;\n  const sm13 = mat[2] * is3;\n  const sm21 = mat[4] * is1;\n  const sm22 = mat[5] * is2;\n  const sm23 = mat[6] * is3;\n  const sm31 = mat[8] * is1;\n  const sm32 = mat[9] * is2;\n  const sm33 = mat[10] * is3;\n\n  const trace = sm11 + sm22 + sm33;\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Decomposes a transformation matrix into its rotation, translation\n * and scale components. Returns only the rotation component\n * @param  {quat} out_r Quaternion to receive the rotation component\n * @param  {vec3} out_t Vector to receive the translation vector\n * @param  {vec3} out_s Vector to receive the scaling factor\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @returns {quat} out_r\n */\nexport function decompose(out_r, out_t, out_s, mat) {\n  out_t[0] = mat[12];\n  out_t[1] = mat[13];\n  out_t[2] = mat[14];\n\n  const m11 = mat[0];\n  const m12 = mat[1];\n  const m13 = mat[2];\n  const m21 = mat[4];\n  const m22 = mat[5];\n  const m23 = mat[6];\n  const m31 = mat[8];\n  const m32 = mat[9];\n  const m33 = mat[10];\n\n  out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  const is1 = 1 / out_s[0];\n  const is2 = 1 / out_s[1];\n  const is3 = 1 / out_s[2];\n\n  const sm11 = m11 * is1;\n  const sm12 = m12 * is2;\n  const sm13 = m13 * is3;\n  const sm21 = m21 * is1;\n  const sm22 = m22 * is2;\n  const sm23 = m23 * is3;\n  const sm31 = m31 * is1;\n  const sm32 = m32 * is2;\n  const sm33 = m33 * is3;\n\n  const trace = sm11 + sm22 + sm33;\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out_r[3] = 0.25 * S;\n    out_r[0] = (sm23 - sm32) / S;\n    out_r[1] = (sm31 - sm13) / S;\n    out_r[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out_r[3] = (sm23 - sm32) / S;\n    out_r[0] = 0.25 * S;\n    out_r[1] = (sm12 + sm21) / S;\n    out_r[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out_r[3] = (sm31 - sm13) / S;\n    out_r[0] = (sm12 + sm21) / S;\n    out_r[1] = 0.25 * S;\n    out_r[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out_r[3] = (sm12 - sm21) / S;\n    out_r[0] = (sm31 + sm13) / S;\n    out_r[1] = (sm23 + sm32) / S;\n    out_r[2] = 0.25 * S;\n  }\n\n  return out_r;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  const x = q[0];\n  const y = q[1];\n  const z = q[2];\n  const w = q[3];\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const sx = s[0];\n  const sy = s[1];\n  const sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  const x = q[0];\n  const y = q[1];\n  const z = q[2];\n  const w = q[3];\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  const sx = s[0];\n  const sy = s[1];\n  const sz = s[2];\n\n  const ox = o[0];\n  const oy = o[1];\n  const oz = o[2];\n\n  const out0 = (1 - (yy + zz)) * sx;\n  const out1 = (xy + wz) * sx;\n  const out2 = (xz - wy) * sx;\n  const out4 = (xy - wz) * sy;\n  const out5 = (1 - (xx + zz)) * sy;\n  const out6 = (yz + wx) * sy;\n  const out8 = (xz + wy) * sz;\n  const out9 = (yz - wx) * sz;\n  const out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  const x = q[0];\n  const y = q[1];\n  const z = q[2];\n  const w = q[3];\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  const rl = 1 / (right - left);\n  const tb = 1 / (top - bottom);\n  const nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  const f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    const nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n  return out;\n}\n\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\nexport const perspective = perspectiveNO;\n\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  const f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    const nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  const upTan = Math.tan((fov.upDegrees * Math.PI) / 180.0);\n  const downTan = Math.tan((fov.downDegrees * Math.PI) / 180.0);\n  const leftTan = Math.tan((fov.leftDegrees * Math.PI) / 180.0);\n  const rightTan = Math.tan((fov.rightDegrees * Math.PI) / 180.0);\n  const xScale = 2.0 / (leftTan + rightTan);\n  const yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  const lr = 1 / (left - right);\n  const bt = 1 / (bottom - top);\n  const nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\nexport const ortho = orthoNO;\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  const lr = 1 / (left - right);\n  const bt = 1 / (bottom - top);\n  const nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let len;\n  let x0;\n  let x1;\n  let x2;\n  let y0;\n  let y1;\n  let y2;\n  let z0;\n  let z1;\n  let z2;\n  const eyex = eye[0];\n  const eyey = eye[1];\n  const eyez = eye[2];\n  const upx = up[0];\n  const upy = up[1];\n  const upz = up[2];\n  const centerx = center[0];\n  const centery = center[1];\n  const centerz = center[2];\n\n  if (\n    Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n    Math.abs(eyey - centery) < glMatrix.EPSILON &&\n    Math.abs(eyez - centerz) < glMatrix.EPSILON\n  ) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  const eyex = eye[0];\n  const eyey = eye[1];\n  const eyez = eye[2];\n  const upx = up[0];\n  const upy = up[1];\n  const upz = up[2];\n\n  let z0 = eyex - target[0];\n  let z1 = eyey - target[1];\n  let z2 = eyez - target[2];\n\n  let len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1;\n  let x1 = upz * z0 - upx * z2;\n  let x2 = upx * z1 - upy * z0;\n\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return `mat4(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]}, ${a[4]}, ${a[5]}, ${a[6]}, ${a[7]}, ${a[8]}, ${a[9]}, ${a[10]}, ${a[11]}, ${a[12]}, ${a[13]}, ${a[14]}, ${a[15]})`;\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(\n    a[0] * a[0] +\n      a[1] * a[1] +\n      a[2] * a[2] +\n      a[3] * a[3] +\n      a[4] * a[4] +\n      a[5] * a[5] +\n      a[6] * a[6] +\n      a[7] * a[7] +\n      a[8] * a[8] +\n      a[9] * a[9] +\n      a[10] * a[10] +\n      a[11] * a[11] +\n      a[12] * a[12] +\n      a[13] * a[13] +\n      a[14] * a[14] +\n      a[15] * a[15]\n  );\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return (\n    a[0] === b[0] &&\n    a[1] === b[1] &&\n    a[2] === b[2] &&\n    a[3] === b[3] &&\n    a[4] === b[4] &&\n    a[5] === b[5] &&\n    a[6] === b[6] &&\n    a[7] === b[7] &&\n    a[8] === b[8] &&\n    a[9] === b[9] &&\n    a[10] === b[10] &&\n    a[11] === b[11] &&\n    a[12] === b[12] &&\n    a[13] === b[13] &&\n    a[14] === b[14] &&\n    a[15] === b[15]\n  );\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  const a0 = a[0];\n  const a1 = a[1];\n  const a2 = a[2];\n  const a3 = a[3];\n  const a4 = a[4];\n  const a5 = a[5];\n  const a6 = a[6];\n  const a7 = a[7];\n  const a8 = a[8];\n  const a9 = a[9];\n  const a10 = a[10];\n  const a11 = a[11];\n  const a12 = a[12];\n  const a13 = a[13];\n  const a14 = a[14];\n  const a15 = a[15];\n\n  const b0 = b[0];\n  const b1 = b[1];\n  const b2 = b[2];\n  const b3 = b[3];\n  const b4 = b[4];\n  const b5 = b[5];\n  const b6 = b[6];\n  const b7 = b[7];\n  const b8 = b[8];\n  const b9 = b[9];\n  const b10 = b[10];\n  const b11 = b[11];\n  const b12 = b[12];\n  const b13 = b[13];\n  const b14 = b[14];\n  const b15 = b[15];\n\n  return (\n    Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n    Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n    Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n    Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n    Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n    Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n    Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n    Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n    Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15))\n  );\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n"],"file":"mat4.js"}