{"version":3,"sources":["../src/is-array.ts"],"names":["isTypedArray","value","ArrayBuffer","isView","DataView","isNumericArray","Array","isArray","length"],"mappings":"AAOA,OAAO,SAASA,YAAT,CAAsBC,KAAtB,EAAyD;AAC9D,SAAOC,WAAW,CAACC,MAAZ,CAAmBF,KAAnB,KAA6B,EAAEA,KAAK,YAAYG,QAAnB,CAA7B,GAA6DH,KAA7D,GAAoF,IAA3F;AACD;AAOD,OAAO,SAASI,cAAT,CAAwBJ,KAAxB,EAA6D;AAClE,MAAIK,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAJ,EAA0B;AACxB,WAAOA,KAAK,CAACO,MAAN,KAAiB,CAAjB,IAAsB,OAAOP,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAA1C,GAAsDA,KAAtD,GAA2E,IAAlF;AACD;;AACD,SAAOD,YAAY,CAACC,KAAD,CAAnB;AACD","sourcesContent":["import {TypedArray, NumericArray} from './array-types';\n\n/**\n * Check is an array is a typed array\n * @param value value to be tested\n * @returns input as TypedArray, or null\n */\nexport function isTypedArray(value: unknown): TypedArray | null {\n  return ArrayBuffer.isView(value) && !(value instanceof DataView) ? (value as TypedArray) : null;\n}\n\n/**\n * Check is an array is a numeric array (typed array or array of numbers)\n * @param value value to be tested\n * @returns input as NumericArray, or null\n */\nexport function isNumericArray(value: unknown): NumericArray | null {\n  if (Array.isArray(value)) {\n    return value.length === 0 || typeof value[0] === 'number' ? (value as number[]) : null;\n  }\n  return isTypedArray(value);\n}\n"],"file":"is-array.js"}